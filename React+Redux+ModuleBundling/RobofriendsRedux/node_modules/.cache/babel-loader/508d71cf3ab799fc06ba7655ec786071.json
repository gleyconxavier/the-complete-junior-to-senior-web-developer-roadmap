{"ast":null,"code":"var _jsxFileName = \"/home/gleycon/Documentos/Projetos/the-complete-junior-to-senior-web-developer-roadmap/React+Redux+ModuleBundling/RobofriendsRedux/src/containers/App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport Searchbox from '../components/SearchBox';\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(requestRobots())\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.store);\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Robofriends\"), React.createElement(Searchbox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/gleycon/Documentos/Projetos/the-complete-junior-to-senior-web-developer-roadmap/React+Redux+ModuleBundling/RobofriendsRedux/src/containers/App.js"],"names":["React","connect","CardList","Searchbox","Scroll","ErrorBoundry","setSearchField","requestRobots","mapStateToProps","state","searchField","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","Component","constructor","componentDidMount","console","log","props","store","fetch","then","response","json","users","setState","render","filteredRobots","filter","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAO,WAAP;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WAAN,CAAkBA,WAD5B;AAEHC,IAAAA,MAAM,EAAEF,KAAK,CAACF,aAAN,CAAoBI,MAFzB;AAGHC,IAAAA,SAAS,EAAEH,KAAK,CAACF,aAAN,CAAoBK,SAH5B;AAIHC,IAAAA,KAAK,EAAEJ,KAAK,CAACF,aAAN,CAAoBM;AAJxB,GAAP;AAMH,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACT,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADhC;AAEHC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACR,aAAa,EAAd;AAF5B,GAAP;AAIH,CALD;;AAOA,MAAMc,GAAN,SAAkBrB,KAAK,CAACsB,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKd,KAAL,GAAa;AACTE,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAEDa,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAvB;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACvB,MAAAA,MAAM,EAACsB;AAAR,KAAd,CAFf;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACxB,MAAAA;AAAD,QAAW,KAAKF,KAAtB;AACA,UAAM;AAACC,MAAAA,WAAD;AAAcM,MAAAA;AAAd,QAAgC,KAAKW,KAA3C;AACA,UAAMS,cAAc,GAAGzB,MAAM,CAAC0B,MAAP,CAAc1B,MAAM,IAAI;AAC3C,aAAOA,MAAM,CAAC2B,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC9B,WAAW,CAAC6B,WAAZ,EAAnC,CAAP;AACH,KAFsB,CAAvB;AAIA,WAAO,CAAC5B,MAAM,CAAC8B,MAAR,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADO,GAGC;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEzB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEoB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAHJ,CAHR;AAaH;;AApC6B;;AAuClC,eAAenC,OAAO,CAACO,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport Searchbox from '../components/SearchBox';\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\nimport \"./App.css\";\n\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchField.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => dispatch(requestRobots())\n    }\n}\n\nclass App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            robots: []\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.store);\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({robots:users}))\n    }\n\n    render() {\n        const {robots} = this.state;\n        const {searchField, onSearchChange} = this.props;\n        const filteredRobots = robots.filter(robots => {\n            return robots.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n\n        return !robots.length ?\n        <h1>Loading</h1> :\n            (\n                <div className=\"tc\">\n                    <h1>Robofriends</h1>\n                    <Searchbox searchChange={onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>\n                )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}