{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\gleyc\\\\Documents\\\\Projetos\\\\the-complete-junior-to-senior-web-developer-roadmap\\\\SPA vs Server Side Rendering\\\\next-ssr\\\\pages\\\\robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Robots = function Robots(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Home\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.robots.map(function (robot) {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, robot.name, robot.email);\n  })));\n};\n\nRobots.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/users'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Robots;","map":{"version":3,"sources":["C:/Users/gleyc/Documents/Projetos/the-complete-junior-to-senior-web-developer-roadmap/SPA vs Server Side Rendering/next-ssr/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","name","email","getInitialProps","res","json","data"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACE,IADX,EAEKF,KAAK,CAACG,KAFX,CADkB;AAAA,GAAtB,CAFR,CALJ,CADJ;AAkBH,CAnBD;;AAqBAP,MAAM,CAACQ,eAAP,GAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHT,KAAK,CAAC,4CAAD,CADF;;AAAA;AACfU,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAAA,2CAGd;AACHT,YAAAA,MAAM,EAAES;AADL,WAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAQA,eAAeX,MAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Robots = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Robots</h1>\r\n            <Link href=\"/\">\r\n                <button>Home</button>\r\n            </Link>\r\n            <div>\r\n                {\r\n                    props.robots.map(robot => (\r\n                        <li key={robot.id}>\r\n                            {robot.name}\r\n                            {robot.email}\r\n                        </li>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nRobots.getInitialProps = async function() {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/users')\r\n    const data = await res.json();\r\n    return {\r\n        robots: data\r\n    }\r\n}\r\n\r\nexport default Robots;"]},"metadata":{},"sourceType":"module"}